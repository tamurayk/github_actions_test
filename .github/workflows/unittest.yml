# This is a basic workflow to help you get started with Actions

name: github_actions_test unittest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - feat/*
      - fix/*
      - patch/*

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # GITHUB_REF: PR merge branch refs/pull/:prNumber/merge
  # See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request
  PR_NUMBER: ${{ echo $GITHUB_REF | sed -e 's/[^0-9]//g') }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get_pr_number:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: GET Pull Request No
    steps:
      run: |
        echo PR_NUMBER: ${{ env.PR_NUMBER }}

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
